<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on menziess blog</title>
    <link>https://menziess.github.io/tags/python/</link>
    <description>Recent content in python on menziess blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jul 2021 00:00:00 +0100</lastBuildDate><atom:link href="https://menziess.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Python Executables</title>
      <link>https://menziess.github.io/howto/create/python-executables/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/create/python-executables/</guid>
      <description>When you want to share your software with a non-developer, or you want to run a comprehensive python project without having to bother with the setup, executables are quite useful. And it only takes about 5 minutes to get it done.</description>
    </item>
    
    <item>
      <title>Install Python Packages From Azure DevOps</title>
      <link>https://menziess.github.io/howto/install/python-packages-from-azure-devops/</link>
      <pubDate>Thu, 04 Mar 2021 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/install/python-packages-from-azure-devops/</guid>
      <description>Python Package Index &lt;a href=&#34;https://pypi.org&#34;&gt;pypi.org&lt;/a&gt; is not the only source for downloading python packages. It&amp;rsquo;s possible to host your own package index.</description>
    </item>
    
    <item>
      <title>Install Python Packages on Azure Synapse</title>
      <link>https://menziess.github.io/howto/install/python-packages-on-azure-synapse/</link>
      <pubDate>Mon, 16 Nov 2020 07:17:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/install/python-packages-on-azure-synapse/</guid>
      <description>This post will be very similar to the last one. But this time, we&amp;rsquo;ll release our python package to Azure Synapse instead of Databricks. In order to unit test Synapse Notebooks, you&amp;rsquo;ll have to jump through all sorts of hoops.</description>
    </item>
    
    <item>
      <title>Install Python Packages on Databricks</title>
      <link>https://menziess.github.io/howto/install/python-packages-on-databricks/</link>
      <pubDate>Mon, 16 Nov 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/install/python-packages-on-databricks/</guid>
      <description>Let&amp;rsquo;s use the same basic setup as in test python code, then use our knowledge from create python packages to convert our code to a package. And finally we will install the package on our Databricks cluster.</description>
    </item>
    
    <item>
      <title>Use Functional Programming In Python</title>
      <link>https://menziess.github.io/howto/use/functional-programming-in-python/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/use/functional-programming-in-python/</guid>
      <description>Although the official python documentation has dedicated an &lt;a href=&#34;https://docs.python.org/3.8/howto/functional.html&#34;&gt;in-depth document on Functional Programming&lt;/a&gt;, the community does not consider FP techniques best practice at all times Popular FP related functions have been moved to &lt;code&gt;functools&lt;/code&gt;. Still, FP concepts can be very helpful, and in this post I will demonstrate some &amp;lsquo;Functional Programming&amp;rsquo;-related concepts, using python.</description>
    </item>
    
    <item>
      <title>Create Python Packages</title>
      <link>https://menziess.github.io/howto/create/python-packages/</link>
      <pubDate>Tue, 11 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/create/python-packages/</guid>
      <description>Why should you care about creating packages? Packages are easy to install (&lt;code&gt;pip install demo&lt;/code&gt;). Packages simplify development (&lt;code&gt;pip install -e .&lt;/code&gt; installs your package and keeps it up-to-date during development). Packages are easy to run and test &amp;hellip;</description>
    </item>
    
    <item>
      <title>Enhance Your Python-vscode Workflow</title>
      <link>https://menziess.github.io/howto/enhance/your-python-vscode-workflow/</link>
      <pubDate>Mon, 10 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/enhance/your-python-vscode-workflow/</guid>
      <description>This post covers my personal workflow for python projects, using Visual Studio Code along with some other tools. A good workflow saves time and allows you to focus on the problem at hand, instead of tasks that make you feel like a robot (machines are good for that).</description>
    </item>
    
    <item>
      <title>Test Python Code</title>
      <link>https://menziess.github.io/howto/test/python-code/</link>
      <pubDate>Wed, 05 Feb 2020 09:39:35 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/test/python-code/</guid>
      <description>Writing unit tests should an integral part of delivering software for every developer. Whenever a piece of code is changed, it has the potential to break all other parts. The broken parts can even be discovered in a far later stage, having caused potential damage that is hard to restore.</description>
    </item>
    
    <item>
      <title>Manage Virtual Environments</title>
      <link>https://menziess.github.io/howto/manage/virtual-environments/</link>
      <pubDate>Mon, 03 Feb 2020 10:00:13 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/manage/virtual-environments/</guid>
      <description>In this post we will take a look at using Pipenv, a dependency manager for python, to boost your python workflow. A virtual environment is an isolated environment in which dependencies for a python project are contained.</description>
    </item>
    
    <item>
      <title>Manage Python Versions</title>
      <link>https://menziess.github.io/howto/manage/python-versions/</link>
      <pubDate>Mon, 03 Feb 2020 09:17:11 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/manage/python-versions/</guid>
      <description>This will be a micro-post talking about managing multiple python versions on your machine, using a tool called Pyenv. Depending on your operating system, it may be quite a hassle uninstalling and installing different python versions.</description>
    </item>
    
  </channel>
</rss>
